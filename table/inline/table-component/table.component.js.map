{"version":3,"sources":["../../../inline/table-component/table.component.ts"],"names":[],"mappings":"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","file":"table.component.js","sourceRoot":"","sourcesContent":["import {AfterContentInit, AfterViewInit, Component, ElementRef, HostListener, Input, OnInit, ViewChild} from '@angular/core';\n\nconst SELECTOR: string = 'ui-table';\n\nexport class ColumnHeader {\n    name: string;\n    sortable?: boolean;\n\n    constructor(name: string, sortable?: boolean) {\n        this.name = name;\n        this.sortable = sortable;\n    };\n}\n\n\nexport class TableComponent implements OnInit, AfterViewInit, AfterContentInit{\n     public columnHeaders: ColumnHeader[];\n     public numbered: boolean;\n     public maxHeight: number; // Value corresponds to number of pixels\n     public scrollable: boolean = false;\n     public paginated: boolean = false;\n\n\n     tableHeader: ElementRef;\n     tableData: ElementRef;\n    childCount: number;\n    numColumns: number;\n\n    sortedBy: number = -1;\n    reversed: boolean = false;\n\n     perPage: number = 5;\n    pages: number[] = [];\n    currentPage: number = 1;\n     public maxPageButtons = 5; // this number should be odd\n\n    ngOnInit() {\n        this.numColumns = this.columnHeaders.length;\n        if(this.numbered){\n            this.numColumns += 1;\n        }\n    }\n\n\n    ngAfterViewInit() {\n        this.styleTable();\n\n        if(this.paginated){\n            this.displayPages();\n        }\n\n        this.setColumnWidths();\n    }\n\n    ngAfterContentInit(){\n        if(this.paginated) {\n            this.pagesSetup();\n        }\n    }\n\n    \n    onResize(){\n        this.setColumnWidths();\n    }\n\n\n    public styleTable() {\n        this.childCount = this.tableHeader.nativeElement.childElementCount;\n\n        let bodyChildren = this.tableData.nativeElement.getElementsByTagName('td');\n        let headerChildren = this.tableHeader.nativeElement.getElementsByTagName('td');\n\n        for(let i = 0; i < bodyChildren.length; i++){\n            bodyChildren[i].style.border=\"1px solid dimgrey\";\n            bodyChildren[i].style.padding=\"8px\";\n            bodyChildren[i].style.textAlign=\"left\";\n        }\n\n        for(let i = 0; i < headerChildren.length; i++){\n            headerChildren[i].style.border=\"1px solid dimgrey\";\n            headerChildren[i].style.padding=\"8px\";\n            headerChildren[i].style.textAlign=\"left\";\n            if (this.columnHeaders[i].sortable) {\n                headerChildren[i].style.background = \"url('') no-repeat\";\n                headerChildren[i].style.backgroundSize = \"20px 20px\";\n                headerChildren[i].style.backgroundPosition = \"right\"\n            }\n        }\n\n    }\n\n    public setColumnWidths() {\n        this.childCount = this.tableHeader.nativeElement.childElementCount;\n\n        let bodyChildren, headerChildren, tbody;\n        bodyChildren = this.tableData.nativeElement.getElementsByTagName('tbody').item(0).getElementsByTagName('tr').item((this.currentPage - 1) * this.perPage).getElementsByTagName('td')\n\n        tbody = this.tableData.nativeElement.getElementsByTagName('tbody').item(0);\n        headerChildren = this.tableHeader.nativeElement.getElementsByTagName('td');\n\n        for(let i=0; i < bodyChildren.length; i++) {\n            if(i != bodyChildren.length - 1) {\n                headerChildren[i].style.setProperty(\"width\",(bodyChildren[i].clientWidth + 1 ) + \"px\"); //All the boxes show up as 1 px short\n            }else if(this.scrollable && ((tbody.offsetHeight + headerChildren[0].offsetHeight) > this.maxHeight)){\n                headerChildren[i].style.setProperty(\"width\", (bodyChildren[i].clientWidth + 18) + \"px\");//The last box accounts for the 17px scroll bar\n            }else{\n                headerChildren[i].style.setProperty(\"width\", (bodyChildren[i].clientWidth + 1) + \"px\");//The last box accounts for the 17px scroll bar\n            }\n        }\n    }\n\n    public pagesSetup(){\n        let rowChildren = this.tableData.nativeElement.getElementsByTagName('tr');\n        this.calculateNumPages(rowChildren.length, this.perPage);\n    }\n\n    public calculateNumPages(rows: number, perPage: number){\n        console.log(Math.ceil(rows/perPage));\n        var pages = (Math.ceil(rows/perPage));\n        var arr = Array.apply(null,Array(pages));\n        this.pages = arr.map((x:any, i:any)=>i+1);\n    }\n\n    public displayPages(){\n\n\n        let bodyChildren = this.tableData.nativeElement.getElementsByTagName('tr');\n\n        for(let i = 0; i < bodyChildren.length; i++ ){\n            if( i > (((this.currentPage-1)*this.perPage)-1) && i < this.currentPage*this.perPage){\n                bodyChildren[i].style.setProperty(\"display\", \"table-row\");\n            }else{\n                bodyChildren[i].style.setProperty(\"display\", \"none\");\n            }\n        }\n\n    }\n\n    public switchPage(num: number){\n        this.currentPage = num;\n\n        this.displayPages();\n        this.setColumnWidths();\n    }\n\n    public prevPage(){\n        if((this.currentPage - 1) > 0 ) {\n            this.switchPage(this.currentPage - 1);\n        }\n    }\n\n    public nextPage(){\n        if((this.currentPage + 1) <= this.pages.length){\n            this.switchPage(this.currentPage + 1);\n        }\n    }\n\n    public buttonDisplay(num: number):boolean{\n\n        var numInDirection = ((this.maxPageButtons-1)/2)+1;\n\n        if((this.currentPage - numInDirection) < num){\n            if((this.currentPage + numInDirection) > num){\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    public sortTable(sortOn: number) {\n\n        if (this.columnHeaders[sortOn].sortable) {\n            //console.log(\"Table Sorted by: \" + sortOn);\n            var rows, switching, i, row1, row2, shouldSwitch;\n\n            switching = true;\n\n            if (this.numbered) {\n                sortOn += 1;\n            }\n\n            if (this.sortedBy == sortOn) {\n                this.reversed = !this.reversed;\n            } else {\n                this.reversed = false;\n            }\n\n\n            while (switching) {\n                switching = false;\n                rows = this.tableData.nativeElement.getElementsByTagName(\"tr\");\n\n                for (i = 0; i < (rows.length - 1); i++) {\n                    shouldSwitch = false;\n\n                    row1 = rows[i].getElementsByTagName(\"td\")[sortOn];\n                    row2 = rows[i + 1].getElementsByTagName(\"td\")[sortOn];\n\n\n                    if (this.reversed) {\n                        if (isNaN(row1.innerHTML) && isNaN(row2.innerHTML)) {\n                            if (row1.innerHTML.toLowerCase() < row2.innerHTML.toLowerCase()) {\n                                shouldSwitch = true;\n                            }\n                        } else if (Number(row1.innerHTML) < Number(row2.innerHTML)) {\n                            shouldSwitch = true;\n                        }\n                    } else {\n                        if (isNaN(row1.innerHTML) && isNaN(row2.innerHTML)) {\n                            if (row1.innerHTML.toLowerCase() > row2.innerHTML.toLowerCase()) {\n                                shouldSwitch = true;\n                            }\n                        } else if (Number(row1.innerHTML) > Number(row2.innerHTML)) {\n                            shouldSwitch = true;\n                        }\n                    }\n\n                    if (shouldSwitch) {\n                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n                        switching = true;\n                    }\n                }\n            }\n\n\n            this.sortedBy = sortOn;\n\n            if (this.paginated) {\n                this.displayPages();\n                this.setColumnWidths();\n            }\n        }\n    }\n\n\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: SELECTOR,\n    template: `\n\n\n      <div class=\"table-container\" style=\"border: solid dimgray 2px;\">\n        <div>\n          <table>\n            <tr class=\"table-header\" #header>\n\n              <td *ngIf=\"numbered\" (click)=\"sortTable(-1)\">#</td>\n              <td *ngFor=\"let header of columnHeaders, let i=index\" (click)=\"sortTable(i)\">\n                {{header.name}}\n                <div *ngIf=\"header.sortable\" style=\"float:right\">\n                  <icon icon=\"col-toggle\"></icon>\n                </div>\n              </td>\n            </tr>\n          </table>\n        </div>\n\n        <div class=\"table-data\"\n             [ngStyle]=\"{'max-height.px':maxHeight}\"\n             [ngClass]=\"{'scrollable':scrollable , 'paginated':paginated, 'standard':(!scrollable && !paginated)}\">\n          <table #tableData>\n            <ng-content></ng-content>\n          </table>\n        </div>\n      </div>\n\n      <br>\n      <div *ngIf=\"paginated\" style=\"text-align: center\">\n        <button [disabled]=\"currentPage == 1\" type=\"button\" (click)=\"switchPage(1)\">first</button>\n        <button [disabled]=\"currentPage == 1\" type=\"button\" (click)=\"prevPage()\">prev</button>\n        <div *ngFor=\"let page of pages,let i = index\" style=\"display: inline;\">\n          <button *ngIf=\"buttonDisplay(page)\" [disabled]=\"currentPage == page\" type=\"button\" (click)=\"switchPage(page)\">{{page}}</button>\n        </div>\n        <button [disabled]=\"currentPage == pages.length\" type=\"button\" (click)=\"nextPage()\">next</button>\n        <button [disabled]=\"currentPage == pages.length\" type=\"button\" (click)=\"switchPage(pages.length)\">last</button>\n      </div>\n    `,\n    styles: [`\n      *{box-sizing:border-box}.paginated{overflow-y:hidden}.scrollable{overflow-y:auto}.standard{overflow:hidden}div.table-data{background:whitesmoke;position:relative}tr.table-header{background:darkgray}table{table-layout:fixed;border-collapse:collapse;width:100%}th,td{border:1px solid dimgrey;text-align:left;padding:8px}\n    `] //This CSS is necessary for the tables to display properly\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'columnHeaders': [{ type: Input },],\n'numbered': [{ type: Input },],\n'maxHeight': [{ type: Input },],\n'scrollable': [{ type: Input },],\n'paginated': [{ type: Input },],\n'tableHeader': [{ type: ViewChild, args: ['header', ] },],\n'tableData': [{ type: ViewChild, args: ['tableData', ] },],\n'perPage': [{ type: Input },],\n'maxPageButtons': [{ type: Input },],\n'onResize': [{ type: HostListener, args: ['window:resize', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}